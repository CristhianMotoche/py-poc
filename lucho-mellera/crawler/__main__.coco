from dataclasses import dataclass

import requests
import bs4
import json

URL = "https://luchomellera.com/agenda/"

@dataclass
class Show:
  date: str
  place: str

  def to_dict(self):
    return { "date": self.date, "place": self.place }


def parse_show(tag) -> Show | None:
  match (tag.find('h2'), tag.find('h4')):
    case (d `isinstance` bs4.element.Tag, place `isinstance` bs4.element.Tag):
      return Show(place=place.get_text(), \date=d.get_text())
    case _:
      return None


def parse_shows(html_doc: str) -> list[dict]:
  soup = bs4.BeautifulSoup(html_doc, 'html.parser')
  return (
      soup.find_all('section', class_="elementor-section")
      |> map$(parse_show)
      |> filter$(None)
      |> map$((x) => x.to_dict())
      |> list
  )


headers = {
  "Accept-Language" : "en-US,en;q=0.5",
  "User-Agent": "Defined",
}

if __name__  == "__main__":
  with open("shows.json", "w") as f:
    match safe_call(requests.get, URL, headers=headers):
      case Expected(result, error=None):
        shows_json = (
          result.content
          |> parse_shows
          |> json.dumps
        )
        f.write(shows_json)
        print("Done!")
      case Expected(_, error=error):
        print(f"Sorry, there was an error: {error}")
